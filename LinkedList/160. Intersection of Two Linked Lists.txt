class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int sizeA = 0;
        ListNode* tempA = headA;
        while(tempA != NULL){
            sizeA++;
            tempA = tempA->next;
        }

        int sizeB = 0;
        ListNode* tempB = headB;
        while(tempB != NULL){
            sizeB++;
            tempB = tempB->next;
        }

        tempA = headA;
        tempB = headB;

        if(sizeA>sizeB){
            int n = sizeA - sizeB;
            for(int i=1; i<=n; i++){
                tempA = tempA->next;
            }

            while(tempA != tempB){
                tempA = tempA->next;
                tempB = tempB->next;
            }
            return tempA;
        }

        else{
            int n = sizeB - sizeA;
            for(int i=1; i<=n; i++){
                tempB = tempB->next;
            }

            while(tempA != tempB){
                tempA = tempA->next;
                tempB = tempB->next;
            }
            return tempA;
        }
    }
};