class Solution {
public:

    int countPrimes(int n) {
        if(n<2) return 0;
        int count = 0; 
        vector<bool> grid(n+1,1);
        grid[0] = 0;
        grid[1] = 0;
        for(int i=2; i<n; i++) {
            if(grid[i] == 1){
                count++;
                int j = i*2;
                while(j<n){
                    grid[j] = 0;
                    j += i;
                }
            }
        }
        return count;
    }
};

// Time complexity of sieve of eratosthenes approach : O(n.log(log n)) ~ O(n)