class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        int n = nums.size();
        if(k==1) return nums;
        int v[n];
        v[n-1] = n;
        stack<int>s;
        s.push(n-1);
        
        // we have next greatest index
        for(int i=n-2; i>=0; i--){
            while(s.size()>0 && nums[s.top()]<=nums[i]) s.pop();
            if(s.size()==0) v[i] = n;
            else v[i] = s.top();
            s.push(i);
        }

        vector<int> ans;
        int idx = 0;
        for(int i=0; i<n-k+1; i++){
            if(idx<i) idx = i;
            int num = nums[idx];
            while(idx < i+k) {
                num = nums[idx];
                if(v[idx] >= i+k) break;
                idx = v[idx];
            }
            ans.push_back(num);
        }
        return ans;
    }
};