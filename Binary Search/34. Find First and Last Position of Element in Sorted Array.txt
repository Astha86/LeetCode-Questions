class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int k) {
        vector <int> v(2,-1);
        int n = nums.size();
        int lo = 0;
        int hi = n-1;

        // 1st Occurence
        while(lo<=hi){
            int mid = (hi + lo)/2;
            if(nums[mid]==k){
                if(mid==0){
                    v[0] = mid;
                    break;
                }
                else if(nums[mid-1]!=k){
                    v[0] = mid;
                    break;
                }
                else hi = mid-1;
            }
            else if(nums[mid]>k) hi = mid-1;
            else lo = mid+1;
        }

        // last Occurence
        lo = 0;
        hi = n-1;
        while(lo<=hi){
            int mid = (hi + lo)/2;
            if(nums[mid]==k){
                if(mid==n-1){
                    v[1] = mid;
                    break;
                }
                if(nums[mid+1]!=k){
                    v[1] = mid;
                    break;
                }
                else lo = mid+1;
            }
            else if(nums[mid]>k) hi = mid-1;
            else lo = mid+1;
        }

        return v;
    }
};