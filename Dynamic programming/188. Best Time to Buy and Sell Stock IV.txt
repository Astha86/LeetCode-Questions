class Solution {
public:

    int dp[1008][108][2];

    int helper(vector<int>& prices, int i, int k, bool on){
        if(i==prices.size()) return 0;
        if(dp[i][k][on] != -1) return dp[i][k][on];

        int ans = INT_MIN;
        ans = helper(prices,i+1,k,on);  // avoid case
        if(on) ans = max(ans,prices[i]+helper(prices,i+1,k-1,false));
        else if(!on && k>0) ans = max(ans,helper(prices,i+1,k,true)-prices[i]);

        return dp[i][k][on] = ans;
    }

    int maxProfit(int k, vector<int>& prices) {
        memset(dp, -1, sizeof(dp));
        return helper(prices,0,k,false);
    }
};