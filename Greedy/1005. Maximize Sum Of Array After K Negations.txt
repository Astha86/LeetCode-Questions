// Min heap approach

class Solution {
public:
    int largestSumAfterKNegations(vector<int>& nums, int k) {
        priority_queue<int,vector<int>,greater<int>> pq;
        int n = nums.size();

        for(auto x: nums){  //O(n)
            pq.push(x);
        }

        for(int i=0; i<k; i++){ //O(k log n)
            if(pq.top()==0) break;
            int x = pq.top();
            pq.pop();
            x *= (-1);
            pq.push(x);
        }

        int sum = 0;
        for(int i=0; i<n; i++){  // O(n)
            int x = pq.top();
            pq.pop();
            sum += x;
        }

        return sum;
    }
};

// T.C = O(n+k logn )