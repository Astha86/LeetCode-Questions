// followup question of Fractional knapsack

bool cmp(vector<int> &a, vector<int> &b){
    return a[1] > b[1];
}

class Solution {
public:

    int maximumUnits(vector<vector<int>>& boxTypes, int truckSize) {
        int n = boxTypes.size();
        int ans = 0;
        sort(boxTypes.begin(), boxTypes.end(), cmp);

        for(int i=0; i<n; i++){
            if(truckSize == 0) break;
            if(boxTypes[i][0]<=truckSize){
                ans += (boxTypes[i][1] * boxTypes[i][0]);
                truckSize -=  boxTypes[i][0];
            }

            else{
                ans += (truckSize*boxTypes[i][1]);
                truckSize = 0;
                break;
            }
        }
        return ans;
    }
};

//  T.C = O(n logn)
//  S.c = O(sorting algo)