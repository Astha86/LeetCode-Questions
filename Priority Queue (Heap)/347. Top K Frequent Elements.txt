class Solution {
public:

    typedef pair<int,int> p;
    vector<int> topKFrequent(vector<int>& nums, int k) {
        int n = nums.size();
        unordered_map<int,int> mp;
        for(int i=0; i<n; i++){
            mp[nums[i]]++;
        }

        priority_queue<p,vector<p>, greater<p>> pq; //min heap
        for(auto x: mp){
            pq.push({x.second,x.first});
            if(pq.size()>k) pq.pop();
        }

        vector<int>ans;
        while(pq.size()!=0){
            int x = pq.top().second;
            ans.push_back(x);
            pq.pop();
        }
        return ans;
    }
};